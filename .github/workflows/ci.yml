name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  lint-and-test:
    name: Lint and Test (Python ${{ matrix.python-version }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.12', '3.13']

    steps:
    - name: Checkout code
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        fetch-depth: 0

    - name: Install uv
      uses: astral-sh/setup-uv@7910d36f4f8f88194c023eb2d07e7c72c8970cd8 # v4.1.1
      with:
        enable-cache: true
        cache-dependency-glob: uv.lock

    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}

    - name: Install dependencies
      run: uv sync --all-extras

    - name: Run ruff format check
      run: uv run ruff format --check .

    - name: Run ruff linting
      run: uv run ruff check .

    - name: Run mypy type checking
      run: uv run mypy src/
      continue-on-error: true    # Don't fail on mypy errors initially

    - name: Run tests with coverage
      run: uv run pytest --cov=champi_gen_ui --cov-report=xml --cov-report=term-missing

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@5c47607acb93fed5485fdbf7232e8a31425f672a # v5.0.2
      if: matrix.python-version == '3.12'
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  security:
    name: Security Checks
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

    - name: Install uv
      uses: astral-sh/setup-uv@7910d36f4f8f88194c023eb2d07e7c72c8970cd8 # v4.1.1

    - name: Set up Python
      run: uv python install 3.12

    - name: Install dependencies
      run: uv sync --all-extras

    - name: Run bandit security checks
      run: uv run bandit -r src/ -f json -o bandit-report.json
      continue-on-error: true

    - name: Run detect-secrets
      run: |
        uv run detect-secrets scan --baseline .secrets.baseline || true
        if [ ! -f .secrets.baseline ]; then
          uv run detect-secrets scan --baseline .secrets.baseline
        fi

    - name: Upload security reports
      uses: actions/upload-artifact@ea165f8d65b6e75b540e0bc8beea8f0bc47e89e6 # v4.5.0
      if: always()
      with:
        name: security-reports
        path: |
          bandit-report.json
          .secrets.baseline

  build:
    name: Build Package
    runs-on: ubuntu-latest
    needs: [lint-and-test]

    steps:
    - name: Checkout code
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

    - name: Install uv
      uses: astral-sh/setup-uv@7910d36f4f8f88194c023eb2d07e7c72c8970cd8 # v4.1.1

    - name: Set up Python
      run: uv python install 3.12

    - name: Build package
      run: uv build

    - name: Check package metadata
      run: |
        uv run pip install twine
        uv run twine check dist/*

    - name: Upload build artifacts
      uses: actions/upload-artifact@ea165f8d65b6e75b540e0bc8beea8f0bc47e89e6 # v4.5.0
      with:
        name: dist
        path: dist/
